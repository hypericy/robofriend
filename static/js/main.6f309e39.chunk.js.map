{"version":3,"sources":["components/Card.js","components/CardList.js","components/searchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","robot","index","searchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAceA,EAZF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MACpB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,mBACpB,gCACA,6BAAKC,IACD,4BAAIC,WCOLI,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BACKA,EAAOC,KAAI,SAACC,EAAMC,GACzB,OAAO,cAAC,EAAD,CAAkBV,GAAMS,EAAMT,GAAIC,KAAMQ,EAAMR,KAAMC,MAAOO,EAAMP,OAAtDQ,SCQTC,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCbI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YCmCJC,G,wDAjCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAZ1C,EAAKC,MAAQ,CACTvB,OAAS,GACToB,YAAa,IAJR,E,gEAOO,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACnB,OAAS4B,S,+BAMlC,IAAD,OACEC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA7B,GAC7C,OAAQA,EAAMR,KAAKsC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAEpE,OACI,sBAAKpC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ6B,a,GA1BpBK,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,8BACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.6f309e39.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({id ,name,email})=>{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robot' src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div>\r\n            <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    return (\r\n        <div>\r\n            {robots.map((robot,index)=>{\r\n      return <Card key={index} id = {robot.id} name={robot.name} email={robot.email}/>  \r\n    })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CardList; ","import React from 'react'\r\n\r\nconst searchBox = ({searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange = {searchChange}\r\n            />\r\n                 \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default searchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border:'1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/searchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css'\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users => this.setState({robots : users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot=>{\r\n           return  robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        });\r\n        return(\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriend</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                </Scroll>    \r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <div>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}